// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Switch (three options) => renders correctly 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "borderColor": "#329932",
      "borderLeftWidth": 1,
      "borderRightWidth": 1,
      "borderTopWidth": 1,
      "flex": 1,
      "flexDirection": "column",
      "height": "100%",
      "justifyContent": "center",
      "width": "100%",
    }
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        Object {
          "backgroundColor": "#141313",
          "borderBottomColor": "#329932",
          "borderBottomWidth": 1,
          "flex": 1,
          "height": "100%",
          "justifyContent": "center",
          "width": "100%",
        },
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#329932",
          "fontFamily": "telegrama_raw",
          "fontSize": 45.911331934501746,
          "textAlign": "center",
          "textAlignVertical": "center",
        }
      }
    >
      foo
    </Text>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        Object {
          "backgroundColor": "#141313",
          "borderBottomColor": "#329932",
          "borderBottomWidth": 1,
          "flex": 1,
          "height": "100%",
          "justifyContent": "center",
          "width": "100%",
        },
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#329932",
          "fontFamily": "telegrama_raw",
          "fontSize": 45.911331934501746,
          "textAlign": "center",
          "textAlignVertical": "center",
        }
      }
    >
      bar
    </Text>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        Object {
          "backgroundColor": "#329932",
          "flex": 1,
          "height": "100%",
          "justifyContent": "center",
          "width": "100%",
        },
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#0e0e0e",
          "fontFamily": "telegrama_raw",
          "fontSize": 45.911331934501746,
          "textAlign": "center",
          "textAlignVertical": "center",
        }
      }
    >
      baz
    </Text>
  </View>
</View>
`;

exports[`Switch (two options) => renders correctly 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "borderColor": "#329932",
      "borderLeftWidth": 1,
      "borderRightWidth": 1,
      "borderTopWidth": 1,
      "flex": 1,
      "flexDirection": "column",
      "height": "100%",
      "justifyContent": "center",
      "width": "100%",
    }
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        Object {
          "backgroundColor": "#329932",
          "flex": 1,
          "height": "100%",
          "justifyContent": "center",
          "width": "100%",
        },
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#0e0e0e",
          "fontFamily": "telegrama_raw",
          "fontSize": 45.911331934501746,
          "textAlign": "center",
          "textAlignVertical": "center",
        }
      }
    >
      foo
    </Text>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        Object {
          "backgroundColor": "#141313",
          "borderBottomColor": "#329932",
          "borderBottomWidth": 1,
          "flex": 1,
          "height": "100%",
          "justifyContent": "center",
          "width": "100%",
        },
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#329932",
          "fontFamily": "telegrama_raw",
          "fontSize": 45.911331934501746,
          "textAlign": "center",
          "textAlignVertical": "center",
        }
      }
    >
      bar
    </Text>
  </View>
</View>
`;
