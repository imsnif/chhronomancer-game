// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Player component => renders correctly 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "backgroundColor": "transparent",
      },
      undefined,
    ]
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Object {
        "backgroundColor": "#329932",
        "borderColor": "#329932",
        "borderRadius": 0,
        "borderWidth": 0.5,
        "flex": 1,
        "flexDirection": "column",
        "height": 120,
        "marginBottom": 7,
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "height": 35,
          "justifyContent": "center",
        }
      }
    >
      <Image
        source={
          Object {
            "uri": "http://10.0.0.6:3000/placeholders/nopic.png",
          }
        }
        style={
          Object {
            "backgroundColor": "#141313",
            "borderColor": "black",
            "borderWidth": 1,
            "flex": 0,
            "height": 32,
            "margin": 1,
            "resizeMode": "contain",
            "width": 32,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "green",
              "height": "100%",
              "opacity": 0.5,
              "width": "100%",
            }
          }
        />
      </Image>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        numberOfLines={1}
        style={
          Object {
            "color": "#0e0e0e",
            "flex": 7,
            "fontFamily": "telegrama_raw",
            "fontSize": 30.607554623001164,
            "textAlign": "center",
          }
        }
      >
        Aram
      </Text>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#141313",
          "borderColor": "#141313",
          "borderRadius": 0,
          "borderWidth": 0.5,
          "flex": 13,
          "flexDirection": "column",
          "justifyContent": "space-between",
          "margin": 1,
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "paddingTop": 10,
          }
        }
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "space-around",
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#329932",
                "flex": 1,
                "fontFamily": "telegrama_raw",
                "fontSize": 12.243021849200467,
                "marginLeft": 9,
                "paddingTop": 2,
                "textAlign": "center",
                "textAlignVertical": "center",
              }
            }
          >
            Resetting
          </Text>
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#329932",
                "flex": 7,
                "fontFamily": "telegrama_raw",
                "fontSize": 12.243021849200467,
                "paddingTop": 2,
                "textAlign": "center",
                "textAlignVertical": "center",
              }
            }
          >
            | |==------------------------------------------------|   1% 00:01:39
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 2,
            "flexDirection": "row",
            "justifyContent": "space-between",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flex": 0,
              "flexDirection": "row",
              "justifyContent": "center",
              "margin": 5,
            }
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Image
              source={1}
              style={
                Object {
                  "height": 30,
                  "marginRight": 4,
                  "width": 30,
                }
              }
            />
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Image
              source={1}
              style={
                Object {
                  "height": 30,
                  "marginRight": 4,
                  "width": 30,
                }
              }
            />
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Image
              source={1}
              style={
                Object {
                  "height": 30,
                  "marginRight": 4,
                  "width": 30,
                }
              }
            />
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Image
              source={1}
              style={
                Object {
                  "height": 30,
                  "marginRight": 4,
                  "width": 30,
                }
              }
            />
          </View>
        </View>
        <View
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Image
              source={1}
              style={
                Object {
                  "height": 30,
                  "marginRight": 4,
                  "width": 30,
                }
              }
            />
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Image
              source={1}
              style={
                Object {
                  "height": 30,
                  "marginRight": 4,
                  "width": 30,
                }
              }
            />
          </View>
        </View>
        <View
          style={
            Object {
              "flex": 1,
              "flexDirection": "row",
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#329932",
                "flex": 1,
                "flexDirection": "row",
                "fontFamily": "telegrama_raw",
                "fontSize": 30.607554623001164,
                "textAlignVertical": "center",
              }
            }
          >
            Cap: 
          </Text>
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#329932",
                "flex": 1,
                "flexDirection": "row",
                "fontFamily": "telegrama_raw",
                "fontSize": 30.607554623001164,
                "textAlignVertical": "center",
              }
            }
          >
            8
            /7
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Player component => renders correctly without active power 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "backgroundColor": "transparent",
      },
      undefined,
    ]
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Object {
        "backgroundColor": "#329932",
        "borderColor": "#329932",
        "borderRadius": 0,
        "borderWidth": 0.5,
        "flex": 1,
        "flexDirection": "column",
        "height": 80,
        "marginBottom": 7,
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "height": 35,
          "justifyContent": "center",
        }
      }
    >
      <Image
        source={
          Object {
            "uri": "http://10.0.0.6:3000/placeholders/nopic.png",
          }
        }
        style={
          Object {
            "backgroundColor": "#141313",
            "borderColor": "black",
            "borderWidth": 1,
            "flex": 0,
            "height": 32,
            "margin": 1,
            "resizeMode": "contain",
            "width": 32,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "green",
              "height": "100%",
              "opacity": 0.5,
              "width": "100%",
            }
          }
        />
      </Image>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        numberOfLines={1}
        style={
          Object {
            "color": "#0e0e0e",
            "flex": 7,
            "fontFamily": "telegrama_raw",
            "fontSize": 30.607554623001164,
            "textAlign": "center",
          }
        }
      >
        Tom
      </Text>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#141313",
          "borderColor": "#141313",
          "borderRadius": 0,
          "borderWidth": 0.5,
          "flex": 13,
          "flexDirection": "column",
          "justifyContent": "space-between",
          "margin": 1,
        }
      }
    >
      <View
        style={Object {}}
      >
        <View />
      </View>
      <View
        style={
          Object {
            "flex": 2,
            "flexDirection": "row",
            "justifyContent": "space-between",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flex": 0,
              "flexDirection": "row",
              "justifyContent": "center",
              "margin": 5,
            }
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Image
              source={1}
              style={
                Object {
                  "height": 30,
                  "marginRight": 4,
                  "width": 30,
                }
              }
            />
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Image
              source={1}
              style={
                Object {
                  "height": 30,
                  "marginRight": 4,
                  "width": 30,
                }
              }
            />
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Image
              source={1}
              style={
                Object {
                  "height": 30,
                  "marginRight": 4,
                  "width": 30,
                }
              }
            />
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Image
              source={1}
              style={
                Object {
                  "height": 30,
                  "marginRight": 4,
                  "width": 30,
                }
              }
            />
          </View>
        </View>
        <View
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Image
              source={1}
              style={
                Object {
                  "height": 30,
                  "marginRight": 4,
                  "width": 30,
                }
              }
            />
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Image
              source={1}
              style={
                Object {
                  "height": 30,
                  "marginRight": 4,
                  "width": 30,
                }
              }
            />
          </View>
        </View>
        <View
          style={
            Object {
              "flex": 1,
              "flexDirection": "row",
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#329932",
                "flex": 1,
                "flexDirection": "row",
                "fontFamily": "telegrama_raw",
                "fontSize": 30.607554623001164,
                "textAlignVertical": "center",
              }
            }
          >
            Cap: 
          </Text>
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#329932",
                "flex": 1,
                "flexDirection": "row",
                "fontFamily": "telegrama_raw",
                "fontSize": 30.607554623001164,
                "textAlignVertical": "center",
              }
            }
          >
            6
            /7
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;
